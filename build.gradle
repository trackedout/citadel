plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.9.22'
    id "com.github.johnrengelman.shadow" version "8.1.1"
    id "java"
    id("xyz.jpenilla.run-paper") version "2.2.2" // https://github.com/jpenilla/run-task
}

group = "org.trackedout"
version = "1.0-SNAPSHOT"

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        url = "https://repo.aikar.co/content/groups/aikar/"
    }
    maven {
        url = "https://jitpack.io"
    }
}

dependencies {
    compileOnly "io.papermc.paper:paper-api:1.20.2-R0.1-SNAPSHOT"
    implementation "commons-io:commons-io:2.13.0"
    implementation "co.aikar:acf-paper:0.5.1-SNAPSHOT"

    implementation group: "org.apache.commons", name: "commons-lang3", version: "3.0"

    // Dunga Dunga API client libraries
    implementation "com.squareup.moshi:moshi-kotlin:1.14.0"
    implementation "com.squareup.moshi:moshi-adapters:1.14.0"
    implementation "com.squareup.okhttp3:okhttp:4.11.0"

    // https://docs.saicone.com/rtag
    implementation 'com.saicone.rtag:rtag:1.4.4'
    // Other modules
    implementation 'com.saicone.rtag:rtag-block:1.4.4'
    implementation 'com.saicone.rtag:rtag-entity:1.4.4'
    implementation 'com.saicone.rtag:rtag-item:1.4.4'

    implementation files('../agronet-fabric/build/libs/agronet-1.0.0.jar')
    implementation "org.jetbrains.kotlin:kotlin-reflect:1.9.22"
}

//compileJava {
//    options.compilerArgs += ["-parameters"]
//    options.fork = true
//    options.forkOptions.executable = 'javac'
//}

compileKotlin {
    kotlinOptions.javaParameters = true
    kotlinOptions.jvmTarget = '17'
}

shadowJar {
    relocate "co.aikar.commands", "org.trackedout.citadel.acf"
    relocate "co.aikar.locales", "org.trackedout.citadel.locales"
    relocate "com.saicone.rtag", project.group + ".libs.rtag"
    relocate "org.trackedout.client", project.group + ".libs.dungadunga"
}

build.dependsOn shadowJar

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset "UTF-8"
    filesMatching("plugin.yml") {
        expand props
    }
}

tasks {
    runServer {
        // Configure the Minecraft version for our task.
        // This is the only required configuration besides applying the plugin.
        // Your plugin's jar (or shadowJar if present) will be used automatically.
        minecraftVersion("1.20.1")
    }
}
